<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lick on Sihan`s Blog</title>
    <link>https://sihan-son.github.io/tags/lick/</link>
    <description>Recent content in lick on Sihan`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 15 Feb 2021 23:01:07 +0900</lastBuildDate><atom:link href="https://sihan-son.github.io/tags/lick/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>겉핥기로 시작하는 Git -git ignore편-</title>
      <link>https://sihan-son.github.io/git/lick-git-ignore/</link>
      <pubDate>Mon, 15 Feb 2021 23:01:07 +0900</pubDate>
      
      <guid>https://sihan-son.github.io/git/lick-git-ignore/</guid>
      <description>지난 글의 예고와는 다르게 git ignore를 먼저 가지고 왔습니다. .gitignore를 확장자로 가지니는 이 친구는 이름값을 하는 친구 입니다. git이 무시할 파일과 디렉토리를 설정해주기 때문입니다.
코드를 작성하고 프로젝트를 진행하다보면 굳이 공유하지 않아도 될 파일이 만들어 지기도 하고, 뒤에 다루게 될 원격 저장소에 올라가지 않아도 되거나 올리면 안될 결과물들이 만들어지기도 합니다. 대표적으로 .idea, .vs 등 IDE들에서 생성되지만 코드를 공유하고 백업하는데 오히려 방해가 되는 것들이 있습니다. 다른 사람이나 미래의 내가 그 코드를 다시 사용하는데 IDE 설정 등이 commit을 방해하는 경우도 생깁니다.</description>
    </item>
    
    <item>
      <title>겉핥기로 시작하는 Git 작업 단계와 파일 관리 -add편-</title>
      <link>https://sihan-son.github.io/git/lick-git-add/</link>
      <pubDate>Sun, 14 Feb 2021 23:10:33 +0900</pubDate>
      
      <guid>https://sihan-son.github.io/git/lick-git-add/</guid>
      <description>이미지에 있는 명령어는 하나씩 배울 거니 지금은 이해가 안가도 괜찮습니다. 겉핥기로 시작하는 Git 시리즈는 Git bash를 사용하는 것으로 전제로 작성 된 글입니다. 이김에 CLI에 익숙해져 보세요!!
오늘은 Git이 어떤 작업 순서를 살펴 보겠습니다. Git을 사용하면 물리적으로는 2가지 단계 논리적으로는 3,4단계에 걸쳐 있습니다. 여기서 물리적인 단계는 작업을 하고 있는 내 컴퓨터와 내 작업 내역을 저장할 원격 저장소가 있는 서버 또는 Github, GitLab 등의 서비스 저장소를 의미하며 물리적으로 2개 이상으로 나뉘어 있는게 보통입니다.</description>
    </item>
    
    <item>
      <title>겉핥기로 시작하는 Git</title>
      <link>https://sihan-son.github.io/git/lick-git-start/</link>
      <pubDate>Tue, 09 Feb 2021 22:58:36 +0900</pubDate>
      
      <guid>https://sihan-son.github.io/git/lick-git-start/</guid>
      <description>초심을 되찾고자 기술 블로그로 돌아가기로 했습니다! 1년 반 정도 IT 도서 서평만 올렸는데 학부 시절 누가 제가 알려줬으면 했던 기술들을 연재해보려고 합니다. 해당 프로젝트의 첫 아이템인 Git입니다.
이미 많은 양질의 Git, Github 관련 글들이 인터넷에 존재하지만 제가 겪었던 시행착오를 나누면서 제 블로그를 보시는 분들에게 도움이 되었으면 합니다.
대학시절 팀 프로젝트, 동아리 등의 활동을 하면서 제일 먼저 세팅하고 필요성을 역설한 개발도구가 Git이었습니다. 하지만 많은 경우 시작하는 시점에선 Git의 필요성조차 느끼지 못하는 친구들이 많았습니다.</description>
    </item>
    
  </channel>
</rss>
