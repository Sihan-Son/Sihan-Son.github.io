<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Sihan`s Blog</title>
    <link>https://sihan-son.github.io/categories/git/</link>
    <description>Recent content in Git on Sihan`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Tue, 09 Feb 2021 22:58:36 +0900</lastBuildDate><atom:link href="https://sihan-son.github.io/categories/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>겉할기로 시작하는 Git</title>
      <link>https://sihan-son.github.io/git/start-git/</link>
      <pubDate>Tue, 09 Feb 2021 22:58:36 +0900</pubDate>
      
      <guid>https://sihan-son.github.io/git/start-git/</guid>
      <description>초심을 되찾고자 기술 블로그로 돌아가기로 했습니다! 1년 반 정도 IT 도서 서평만 올렸는데 학부 시절 누가 제가 알려줬으면 했던 기술들을 연재해보려고 합니다. 해당 프로젝트의 첫 아이템인 Git입니다.
이미 많은 양질의 Git, Github 관련 글들이 인터넷에 존재하지만 제가 겪었던 시행착오를 나누면서 제 블로그를 보시는 분들에게 도움이 되었으면 합니다.
대학시절 팀 프로젝트, 동아리 등의 활동을 하면서 제일 먼저 세팅하고 필요성을 역설한 개발도구가 Git이었습니다. 하지만 많은 경우 시작하는 시점에선 Git의 필요성조차 느끼지 못하는 친구들이 많았습니다.</description>
    </item>
    
    <item>
      <title>gitignore 변경 사항 remote repo에 적용하기</title>
      <link>https://sihan-son.github.io/git/git-ignore-update/</link>
      <pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sihan-son.github.io/git/git-ignore-update/</guid>
      <description>테크 블로그를 목표 시작한 블로그가 1년 넘게 IT 도서 서평 블로그가 되었습니다. 초심을 찾고자 오랜만에 git, Github를 주제로 돌아왔습니다. 오늘 내용은 Github에만 적용 되는 내용은 아니고 bitbucket, gitlab에서도 동일하게 적용되는 내용이지만 제 주 서식처가 github인 관계로 github가 메인입니다.
git을 이용해 프로젝트를 진행하다 보면 굳이 버전관리가 필요 없거나 remote repo인 Github등에 올리면 안되거나, 필요가 없는 것들이 존재합니다. git에 좀 익숙하신 분들이라면 이런 파일이나 디렉토리를 관리하기 위해서 .gitignore을 대충이라도 써보셨거나 쓸 계획을 가지고 계실 것입니다.</description>
    </item>
    
    <item>
      <title>Pandoc으로 Markdown Github-style 렌더링하기</title>
      <link>https://sihan-son.github.io/git/pandoc-github-style-render/</link>
      <pubDate>Thu, 12 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://sihan-son.github.io/git/pandoc-github-style-render/</guid>
      <description>Pandoc이라는 Haskell로 작성 된 converter로 markdown, mediawiki, textile, HTML, docx(ms word), epub, PDF 등으로 변화이 가능한 유틸리입니다.
설치 다운로드에서 스크롤을 내리시면 OS별로 설치 파일을 받을 수 있습니다. OS 버전에 맞는 걸로 설치 해주세요.
주요 옵션    옵션 설명     -o FILENAME, &amp;ndash;output=FILENAME 저장할 파일명   -f FORMAT, &amp;ndash;from=FORMAT 소스 포맷   -t FORMAT,&amp;ndash;to=FORMAT 저장할 포맷   &amp;ndash;toc 목차 생성   -S, &amp;ndash;smart pandoc 이 소스 포맷을 판단해서 처리   -s, &amp;ndash;standalone 파일이 아닌 STDIN 에서 입력 수행   -c URL, &amp;ndash;css=URL 변환시 사용할 CSS 의 URL   -H FILENAME, &amp;ndash;include-in-header=FILENAME FILENAME 을 HEADER 로 사용   -A FILENAME, &amp;ndash;include-after-body=FILENAME FILENAME 을 footer 로 사용     -o FILENAME은 필수 옵션입니다.</description>
    </item>
    
    <item>
      <title>Github에서 Public 저장소를 Private로 바꾸어 봅시다</title>
      <link>https://sihan-son.github.io/git/github-repo-public-to-private/</link>
      <pubDate>Sun, 08 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://sihan-son.github.io/git/github-repo-public-to-private/</guid>
      <description>오늘 알아볼 내용은 Public repository를 Private repository로 바꾸는 법을 알아보겠습니다. 원래는 유료 기능이었으나 Microsoft가 작년에 GitHub을 인수하면서 학생사용자들에게만 무료로 제공 되던 Private repository를 모든 사용자에게 무료로 풀어주었습니다. 그래서 BitBucket의 매력이 크게 떨어져서 조금 슬픈 일이긴 하지만 저는 GitHub을 더 좋아하기 때문에 기존의 Public repository를 Private repository로 바꾸어 봅시다.
리포를 들어가면 제일 상단에 이미지처럼 여러 메뉴가 있습니다. 오늘 저희가 필요한 기능은 제일 우측에 있는 Settings에 있습니다.
Settings에 들어가서 스크롤을 제일 아래로 내리면 다음과 같은 화면이 보입니다.</description>
    </item>
    
  </channel>
</rss>
